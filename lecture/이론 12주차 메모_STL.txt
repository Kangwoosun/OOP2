Standard Template Library 
// STL, 모두가 이용할 수 있는 Template 라이브러리

Vector 
// Dynamic Array


Containers
//어떤 데이터나 오브젝트를 저장하는 데이터 구조

Sequence containers
// 연속적으로 나열되어 있는 구조
// vector<T> 동적배열
// deque<T> 앞이나 뒤에 입력함 (벡터보다 느림)
// list<T> 배열의 아무장소에나 입력가능함(중간에 넣을게 많으면 vector보다 list를 사용하는 것을 추천함
// string

Associative containers
// 각 키값에 연속적으로 저장 되어있는 구조(set)

// Sequence container 와 Associative container은 first class container이라고 부름

Container adapters
// Container 안에 다른 Container가 있는 구조


Iterators
// Iteratiors는 배열마다 정의가 되어있음 (vector, list, deque, etc)

vector<int>::iterator X = vector.begin();
//Iterator은 벡터의 배열 데이터타입을 명시해줘야됨(다르면 안됨)
//vector.end()는 벡터의 마지막배열이 아니라 마지막배열+1을 뜻함

Reverse Iteratiors

reverse_iterator rp;
for (rp = container.rbegin(); rp != container.rend(); rp++)
	cout << *rp << endl;

rbegin()
// Returns iterator at last element

rend()
// Returns sentinel "end" marker

//vector에도 string처럼 capacity이 있음


STACK

stack배열의 기본설정은 vector이다
The Standard Library is a fundamental part of the C++ Standard. It
provides C++ programmers with a comprehensive set of efficiently
implemented tools and facilities that can be used for most types of
applications."
